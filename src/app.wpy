<style lang="less">
@import './style/weui.less';
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    /**
     * 主包模块 tabBar pages 一定要在这里声明
     */
    pages: [
      'pages/tabBar/index',
      'pages/tabBar/category',
      'pages/tabBar/my',
      'pages/tabBar/search'
    ],
    /**
     * 子包模块 分包加载
     * pages不存在tabBar的 统一在这里声明
     */
    subPackages: [
      {
        root: 'pages/users_package',//根目录
        pages: [          //根目录下的路径
          'page/test'
        ]
      }
    ],
    // 设置默认页面的窗口表现
    window: {
      backgroundTextStyle: 'light',//下拉背景字体、loading 图的样式，仅支持 dark/light
      navigationBarBackgroundColor: '#FF4040',//导航栏背景颜色
      navigationBarTitleText: '淘宝客',//导航栏标题文字内容
      navigationBarTextStyle: 'white',//导航栏标题颜色，仅支持 black/white
      backgroundColor: '#f8f8f8'//	窗口的背景色
    },
    //	设置网络超时时间
    networkTimeout: {
        request: 10000,
        connectSocket: 10000,
        uploadFile: 10000,
        downloadFile: 10000
    },
    // 设置底部 tab 的表现
    tabBar: {
      color: '#333',//tab 上的文字默认颜色
      selectedColor: '#EF4847',//tab 上的文字选中时的颜色
      borderStyle: 'white',//tabbar上边框的颜色， 仅支持 black/white
      backgroundColor: '#ffffff',//	tab 的背景色
      list: [//tab 的列表，详见 list 属性说明，最少2个、最多5个 tab
          {
              pagePath: 'pages/tabBar/index',//页面路径，必须在 pages 中先定义
              iconPath: 'images/icon/home.png',//图片路径
              selectedIconPath: 'images/icon/home_click.png',//选中时的图片路径
              text: '首页'//tab 上按钮文字
          },
          {
              pagePath: 'pages/tabBar/search',
              iconPath: 'images/icon/search.png',
              selectedIconPath: 'images/icon/search_click.png',
              text: '找优惠券'
          },
          {
              pagePath: 'pages/tabBar/category',
              iconPath: 'images/icon/classification.png',
              selectedIconPath: 'images/icon/classification_click.png',
              text: '分类'
          },
          {
              pagePath: 'pages/tabBar/my',
              iconPath: 'images/icon/personal.png',
              selectedIconPath: 'images/icon/personal_click.png',
              text: '我的'
          }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
